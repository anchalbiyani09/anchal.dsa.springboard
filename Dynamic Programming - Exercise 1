class Tester {
	
	public static int cutRod(int[] price, int n) {
	    // Create a dp array to store maximum prices
	    int[] dp = new int[n + 1];
	    
	    // Base case: If rod length is 0, maximum price is 0
	    dp[0] = 0;
	    
	    // Fill dp array in bottom-up manner
	    for (int i = 1; i <= n; i++) {
	        int maxPrice = Integer.MIN_VALUE;
	        for (int j = 1; j <= i; j++) {
	            maxPrice = Math.max(maxPrice, price[j - 1] + dp[i - j]);
	        }
	        dp[i] = maxPrice;
	    }
	    
	    // Return the maximum price for rod of length n
	    return dp[n];
	}

	public static void main(String[] args) {
		int price [] = { 1, 5, 8, 9, 10, 17, 17, 20 };
		int n = 4;
		System.out.println("Maximum price: " + cutRod(price, n));
	}
}
