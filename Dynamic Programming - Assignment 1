import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

class Tester {
    
    static int count = 0;
    
    public static void findWordSegments(List<String> wordsList, String inputString) {
        Set<String> wordSet = new HashSet<>(wordsList);
        int n = inputString.length();
        boolean[] dp = new boolean[n + 1];
        dp[0] = true; // Base case: empty string
        
        for (int i = 1; i <= n; i++) {
            for (int j = 0; j < i; j++) {
                if (dp[j] && wordSet.contains(inputString.substring(j, i))) {
                    dp[i] = true;
                    break;
                }
            }
        }
        
        countSegments(dp, inputString, 0, wordSet);
    }
    
    private static void countSegments(boolean[] dp, String inputString, int start, Set<String> wordSet) {
        if (start == inputString.length()) {
            count++;
            return;
        }
        
        for (int i = start; i < inputString.length(); i++) {
            if (dp[i + 1] && wordSet.contains(inputString.substring(start, i + 1))) {
                countSegments(dp, inputString, i + 1, wordSet);
            }
        }
    }

    public static void main(String[] args) {
        List<String> wordsList = new ArrayList<>();
        wordsList.add("i");
        wordsList.add("like");
        wordsList.add("pizza");
        wordsList.add("li");
        wordsList.add("ke");
        wordsList.add("pi");
        wordsList.add("zza");

        String inputString = "ilikepizza";
        findWordSegments(wordsList, inputString);
        System.out.println("Number of segments: " + count); // Output should be 4
    }
}
