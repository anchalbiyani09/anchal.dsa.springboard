class Tester {
    
    public static int[] getMaxMin(int arr[], int low, int high) {
        int[] result = new int[2];
        
        // Base case: If array contains only one element
        if (low == high) {
            result[0] = arr[low]; // Both max and min are the single element
            result[1] = arr[low];
            return result;
        }
        
        // Base case: If array contains two elements
        if (high == low + 1) {
            if (arr[low] > arr[high]) {
                result[0] = arr[low]; // Max
                result[1] = arr[high]; // Min
            } else {
                result[0] = arr[high]; // Max
                result[1] = arr[low]; // Min
            }
            return result;
        }
        
        // Recursive case: Divide the array into two halves
        int mid = (low + high) / 2;
        int[] leftMinMax = getMaxMin(arr, low, mid);
        int[] rightMinMax = getMaxMin(arr, mid + 1, high);
        
        // Combine results
        result[0] = Math.max(leftMinMax[0], rightMinMax[0]); // Max of left and right
        result[1] = Math.min(leftMinMax[1], rightMinMax[1]); // Min of left and right
        
        return result;
    }
    
    public static void main(String args[]) {
        int arr[] = {1000, 10, 5, 1, 2000};

        int[] maxMin = getMaxMin(arr, 0, arr.length - 1);

        System.out.println("Minimum value is " + maxMin[1]);
        System.out.println("Maximum value is " + maxMin[0]);
    }
}
