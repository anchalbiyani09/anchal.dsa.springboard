import java.util.ArrayDeque;
import java.util.Deque;

class Tester {

    public static Deque<Character> updateStack(Deque<Character> inputStack) {
        // Create a temporary stack to hold the bottom three elements
        Deque<Character> tempStack = new ArrayDeque<>();
        
        // Pop the bottom three elements from inputStack and push them into tempStack
        for (int i = 0; i < 3; i++) {
            tempStack.push(inputStack.removeLast());
        }
        
        // Move the remaining elements of inputStack to tempStack (which reverses their order)
        while (!inputStack.isEmpty()) {
            tempStack.push(inputStack.pop());
        }
        
        // Move elements from tempStack back to inputStack to restore the original order
        while (!tempStack.isEmpty()) {
            inputStack.push(tempStack.pop());
        }
        
        return inputStack; // Return the updated inputStack
    }
    
    public static void main(String[] args) {
        
        Deque<Character> inputStack = new ArrayDeque<>();
        inputStack.push('E');
        inputStack.push('D');
        inputStack.push('C');
        inputStack.push('B');
        inputStack.push('A');
        
        Deque<Character> resultStack = updateStack(inputStack);
        
        System.out.println("The alphabets in the updated stack are:");
        for (Character alphabet : resultStack) {
            System.out.println(alphabet);
        }
    }
}

