class Tester {

    public static void mergeSort(int[] elements, int size) {
        if (size < 2) {
            return; // Base case: array with 0 or 1 element is already sorted
        }

        // Divide the array into two halves
        int mid = size / 2;
        int[] left = new int[mid];
        int[] right = new int[size - mid];

        // Populate left and right arrays
        for (int i = 0; i < mid; i++) {
            left[i] = elements[i];
        }
        for (int i = mid; i < size; i++) {
            right[i - mid] = elements[i];
        }

        // Recursively sort each half
        mergeSort(left, mid);
        mergeSort(right, size - mid);

        // Merge the sorted halves
        merge(elements, left, right, mid, size - mid);
    }

    public static void merge(int[] elements, int[] left, int[] right, int leftMerge, int rightMerge) {
        int i = 0, j = 0, k = 0;

        // Merge left and right arrays into elements[]
        while (i < leftMerge && j < rightMerge) {
            if (left[i] <= right[j]) {
                elements[k++] = left[i++];
            } else {
                elements[k++] = right[j++];
            }
        }

        // Copy remaining elements of left[] if any
        while (i < leftMerge) {
            elements[k++] = left[i++];
        }

        // Copy remaining elements of right[] if any
        while (j < rightMerge) {
            elements[k++] = right[j++];
        }
    }

    public static double findMedian(int elements[]) {
        int n = elements.length;
        if (n == 0) {
            return 0; // No elements in the array, median is 0
        }

        if (n % 2 == 1) {
            // Odd number of elements, median is the middle element
            return elements[n / 2];
        } else {
            // Even number of elements, median is the average of the two middle elements
            int mid1 = elements[n / 2 - 1];
            int mid2 = elements[n / 2];
            return (double) (mid1 + mid2) / 2;
        }
    }

    public static void main(String[] args) {
        int elements[] = { 64, 34, 25, 12, 22, 11, 90 };

        mergeSort(elements, elements.length);

        System.out.println("Sorted Array:");
        displayArray(elements);

        System.out.println("Median: " + findMedian(elements));
    }

    public static void displayArray(int[] elements) {
        for (int element : elements)
            System.out.print(element + " ");
        System.out.println();
    }
}
